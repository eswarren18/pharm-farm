"""revised patient_profile table

Revision ID: b3595a6cd911
Revises: 18fc693558b8
Create Date: 2025-07-02 02:56:57.407761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b3595a6cd911'
down_revision: Union[str, None] = '18fc693558b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('patient_profiles', sa.Column('first_name', sa.String(), nullable=False))
    op.add_column('patient_profiles', sa.Column('last_name', sa.String(), nullable=False))
    op.add_column('patient_profiles', sa.Column('email', sa.String(), nullable=True))
    op.add_column('patient_profiles', sa.Column('active', sa.Boolean(), nullable=False))
    op.alter_column('patient_profiles', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(op.f('uq_patient_identity'), 'patient_profiles', type_='unique')
    op.create_unique_constraint('uq_patient_identity', 'patient_profiles', ['first_name', 'last_name', 'dob', 'phone'])
    op.drop_column('patient_profiles', 'name')
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'email')
    op.add_column('patient_profiles', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('uq_patient_identity', 'patient_profiles', type_='unique')
    op.create_unique_constraint(op.f('uq_patient_identity'), 'patient_profiles', ['name', 'dob', 'phone'], postgresql_nulls_not_distinct=False)
    op.alter_column('patient_profiles', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('patient_profiles', 'active')
    op.drop_column('patient_profiles', 'email')
    op.drop_column('patient_profiles', 'last_name')
    op.drop_column('patient_profiles', 'first_name')
    # ### end Alembic commands ###
